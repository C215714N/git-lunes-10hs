RESET	(REINICIAR)
	Comando que permite la eliminacion de commits
	del historial ordinalmente, por consecuente
	tambien se eliminan los cambios del respositorio
	y si lo especificamos tambien del working directory.

	NOTA: Debemos utilizar este comando unicamente si 
	los cambios aun no fueron subidos en el repositorio	
	remoto, ya que estamos alterando el historial y 
	podemos comprometer el trabajo de otras personas que
	esten utilizando el mismo.


GIT
	git reset --soft <REF*> => elimina los commits indicados pero no modifica las areas
				   WORKING DIRECTORY ni el INDEX 
				   (de ser necesario debemos generar un commit que registre algunos cambios descartados)

	git reset --mixed <REF*> => elimina los commits indicados y reestablece el index al
				    estado original del HEAD, solamente mantiene el WORKING DIRECTORY
				    (debemos volver a agregar los archivos al INDEX y emitir un commit)

	git reset --hard <REF*> => elimina los commits, reestablece el INDEX y modifica el WORKING DIRECTORY
				   (debemos utilizar este comando en caso de querer descartar totalmente un historial de cambios)

REVERT	(Revertir)
	Comando que genera un nuevo commit deshaciendo
	los cambios de un commit especificado, es ideal
	para cuando ya tenemos subidos los cambios a un
	repositorio remoto y queremos revetir la situacion
	generada en un commit.

	NOTA: En caso de habernos equivocado a la hora de
	aplicar dicho comando, podemos eliminar el commit
	que deshace los cambios o revertir el mismo.

GIT
	git revert <REF*> => elimina los cambios generando un nuevo commit


REF*
	HEAD^	=> commit padre
	HEAD~1	=> commit anterior
	abc123	=> commit especifico

